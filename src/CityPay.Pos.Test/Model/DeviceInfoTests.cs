/* 
 * CityPay POS API
 *
 * CityPay Point of Sale API for payment with card present devices including EMV readers and contactless POS readers.  The API makes it simple to add EMV and contactless card acceptance to iOS, Android, Tablet and desktop applicaitons using a HTTPS protocol. It segregates the complexity of payment processing from the sales environment and eliminates any necessity for the target system to handle card data. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@citypay.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CityPay.Pos.Api;
using CityPay.Pos.Model;
using CityPay.Pos.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CityPay.Pos.Test
{
    /// <summary>
    ///  Class for testing DeviceInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DeviceInfoTests
    {
        // TODO uncomment below to declare an instance variable for DeviceInfo
        //private DeviceInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DeviceInfo
            //instance = new DeviceInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DeviceInfo
        /// </summary>
        [Test]
        public void DeviceInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DeviceInfo
            //Assert.IsInstanceOfType<DeviceInfo> (instance, "variable 'instance' is a DeviceInfo");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Serialno'
        /// </summary>
        [Test]
        public void SerialnoTest()
        {
            // TODO unit test for the property 'Serialno'
        }
        /// <summary>
        /// Test the property 'Portable'
        /// </summary>
        [Test]
        public void PortableTest()
        {
            // TODO unit test for the property 'Portable'
        }
        /// <summary>
        /// Test the property 'Busy'
        /// </summary>
        [Test]
        public void BusyTest()
        {
            // TODO unit test for the property 'Busy'
        }
        /// <summary>
        /// Test the property 'BatteryCharging'
        /// </summary>
        [Test]
        public void BatteryChargingTest()
        {
            // TODO unit test for the property 'BatteryCharging'
        }
        /// <summary>
        /// Test the property 'BatteryPercentage'
        /// </summary>
        [Test]
        public void BatteryPercentageTest()
        {
            // TODO unit test for the property 'BatteryPercentage'
        }
        /// <summary>
        /// Test the property 'Printer'
        /// </summary>
        [Test]
        public void PrinterTest()
        {
            // TODO unit test for the property 'Printer'
        }

    }

}
